name: pipeline-upload-video
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main  # Executa também para pull requests para a branch 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Setup Node.js v20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install Dependencies
      run: npm ci # Usar 'npm ci' para garantir instalação reprodutível

    - name: Compile TypeScript
      run: npm run build # Certifique-se de que o comando "build" está configurado no seu package.json
      
    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' # Só faz o deploy se estiver na branch 'main'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      env:
        DOCKER_REPOSITORY: rmontoza/msupload
        IMAGE_TAG: latest

      run: |
        docker build -t $DOCKER_REPOSITORY:$IMAGE_TAG .
        docker push $DOCKER_REPOSITORY:$IMAGE_TAG

  deploy_to_eks:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
          kubectl apply -f src/eks/app-upload-process-deployment.yaml
          kubectl apply -f src/eks/app-upload-process-service-aws.yaml
          kubectl apply -f src/eks/app-upload-process-hpa.yaml
